(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{147:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"keep-alive"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#keep-alive","aria-hidden":"true"}},[t._v("#")]),t._v(" keep-alive")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("在Vue构建的单页面应用（SPA）中，路由模块一般使用"),a("code",[t._v("vue-router")]),t._v("。"),a("code",[t._v("vue-router")]),t._v("不保存被切换组件的状态，\n它进行"),a("code",[t._v("push")]),t._v("或者"),a("code",[t._v("replace")]),t._v("时，旧组件会被销毁，而新组件会被新建，走一遍完整的生命周期。\n但有时候，我们有一些需求，比如跳转到详情页面时，需要保持列表页的滚动条的深度，等返回的时候依然在这个位置，这样可以提高用户体验。\n在Vue中，对于这种“页面缓存”的需求，我们可以使用"),a("code",[t._v("keep-alive")]),t._v("组件来解决这个需求。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("keep-alive")]),t._v("是个抽象组件（或称为功能型组件），实际上不会被渲染在DOM树中。\n它的作用是在内存中缓存组件（不让组件销毁），等到下次再渲染的时候，还会保持其中的所有状态，并且会触发"),a("code",[t._v("activated")]),t._v("钩子函数。\n因为缓存的需要通常出现在页面切换时，所以常与"),a("code",[t._v("router-view")]),t._v("一起出现：")])])]),t._v(" "),a("div",{staticClass:"language-md extra-class"},[a("pre",{pre:!0,attrs:{class:"language-md"}},[a("code",[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("keep-alive")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{attrs:{class:"token code keyword"}},[t._v("    <router-view />")]),t._v("\n"),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("keep-alive")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("可以使用"),a("code",[t._v("keep-aliv")]),t._v("e组件的"),a("code",[t._v("include/exclude")]),t._v("属性。\n"),a("code",[t._v("include")]),t._v("属性表示要缓存的组件名（即组件定义时的"),a("code",[t._v("name")]),t._v("属性），\n接收的类型为"),a("code",[t._v("string")]),t._v("、"),a("code",[t._v("RegExp")]),t._v("或"),a("code",[t._v("string")]),t._v("数组；\n"),a("code",[t._v("exclude")]),t._v("属性有着相反的作用，匹配到的组件不会被缓存。\n假如可能出现在同一"),a("code",[t._v("router-view")]),t._v("的N个页面中，我只想缓存列表页和详情页，那么可以这样写：")]),t._v(" "),a("div",{staticClass:"language-md extra-class"},[a("pre",{pre:!0,attrs:{class:"language-md"}},[a("code",[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("keep-alive")]),t._v(" "),a("span",{attrs:{class:"token attr-name"}},[t._v(":include")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("["),a("span",{attrs:{class:"token punctuation"}},[t._v("'")]),t._v("Home"),a("span",{attrs:{class:"token punctuation"}},[t._v("'")]),t._v(", "),a("span",{attrs:{class:"token punctuation"}},[t._v("'")]),t._v("User"),a("span",{attrs:{class:"token punctuation"}},[t._v("'")]),t._v("]"),a("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("router-view")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("keep-alive")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("h2",{attrs:{id:"vue实现前进刷新，后退不刷新"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue实现前进刷新，后退不刷新","aria-hidden":"true"}},[t._v("#")]),t._v(" vue实现前进刷新，后退不刷新")]),t._v(" "),a("p",[t._v("希望实现前进刷新、后退不刷新的效果。即加载过的界面能缓存起来（返回不用重新加载），关闭的界面能被销毁掉（再进入时重新加载）。")]),t._v(" "),a("p",[t._v("例如对a->b->c 前进（b,c）刷新，c->b->a 后退（b,a）不刷新")]),t._v(" "),a("p",[t._v("知道路由是前进还是后退就好了，")]),t._v(" "),a("p",[t._v("这样的话我就能在后退的时候让"),a("code",[t._v("from")]),t._v("路由的"),a("code",[t._v("keepAlive")]),t._v("置为"),a("code",[t._v("false")]),t._v(" ，")]),t._v(" "),a("p",[a("code",[t._v("to")]),t._v("路由的"),a("code",[t._v("keepAlive")]),t._v("置为"),a("code",[t._v("ture")]),t._v("，就能在再次前进时，重新加载之前这个"),a("code",[t._v("keepAlive")]),t._v("被置为"),a("code",[t._v("false")]),t._v("的路由了")]),t._v(" "),a("p",[t._v("但是这个需要结合鈎子函数来实现")]),t._v(" "),a("div",{staticClass:"language-vue extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vue"}},[a("code",[t._v("// App.vue\n"),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("app"),a("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("keep-alive")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n      "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("router-view")]),t._v(" "),a("span",{attrs:{class:"token attr-name"}},[t._v("v-if")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("$route.meta.keepAlive"),a("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("router-view")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("keep-alive")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("router-view")]),t._v(" "),a("span",{attrs:{class:"token attr-name"}},[t._v("v-if")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("!$route.meta.keepAlive"),a("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("router-view")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("下面在"),a("code",[t._v("router/index.js")]),t._v("即我们的路由文件中，定义"),a("code",[t._v("meta")]),t._v("信息：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// list是我们的搜索结果页面")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("      \n    path"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'/list'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  \n    name"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'List'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("      \n    component"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" resolve "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("require")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v("'@/pages/list'")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" resolve"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("    \n    meta"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("        \n        isUseCache"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("false")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("// 这个字段的意思稍后再说      ")]),t._v("\n        keepAlive"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("// 通过此字段判断是否需要缓存当前组件  ")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("    \n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("说这之前，先简单说一下和缓存相关的"),a("code",[t._v("vue钩子函数")]),t._v("。")]),t._v(" "),a("p",[t._v("设置了"),a("code",[t._v("keepAlive")]),t._v("缓存的组件：")]),t._v(" "),a("p",[t._v("第一次进入："),a("code",[t._v("beforeRouterEnter")]),t._v(" ->"),a("code",[t._v("created")]),t._v("->…->"),a("code",[t._v("activated")]),t._v("->…->"),a("code",[t._v("deactivated")])]),t._v(" "),a("p",[t._v("后续进入时："),a("code",[t._v("beforeRouterEnter")]),t._v(" ->"),a("code",[t._v("activated")]),t._v("->"),a("code",[t._v("deactivated")])]),t._v(" "),a("p",[t._v("可以看出，只有第一次进入该组件时，才会走"),a("code",[t._v("created")]),t._v("钩子，而需要缓存的组件中"),a("code",[t._v("activated")]),t._v("是每次都会走的钩子函数。")]),t._v(" "),a("p",[t._v("所以，我们要在这个钩子里面去判断，当前组件是需要使用缓存的数据还是重新刷新获取数据。思路有了，下面我们来实现")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// list组价的activated钩子")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("activated")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("// isUseCache为false时才重新刷新获取数据")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("// 因为对list使用keep-alive来缓存组件，所以默认是会使用缓存数据的         ")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token operator"}},[t._v("!")]),a("span",{attrs:{class:"token keyword"}},[t._v("this")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$route"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("meta"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isUseCache"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("            \n        "),a("span",{attrs:{class:"token keyword"}},[t._v("this")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("list "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 清空原有数据")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("this")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("onLoad")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 这是我们获取数据的函数")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("这里的"),a("code",[t._v("isUseCache")]),t._v(" 其实就是我们用来判断是否需要使用缓存数据的字段，我们在"),a("code",[t._v("list")]),t._v("的路由的"),a("code",[t._v("meta")]),t._v("中已经默认设置为"),a("code",[t._v("false")]),t._v("，所以第一次进入"),a("code",[t._v("list")]),t._v("时是获取数据的。")]),t._v(" "),a("p",[t._v("当我们从详情页返回时，我们把"),a("code",[t._v("list")]),t._v("页面路由的"),a("code",[t._v("isUseCache")]),t._v("设置成"),a("code",[t._v("true")]),t._v("，这样我们在返回"),a("code",[t._v("list")]),t._v("页面时会使用缓存数据")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// 详情页面的beforeRouteLeave钩子函数")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("beforeRouteLeave")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("to"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("from")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("        \n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("to"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'List'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        to"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("meta"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isUseCache "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    \n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("        \n    "),a("span",{attrs:{class:"token function"}},[t._v("next")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("我们这里是在即将离开"),a("code",[t._v("detail")]),t._v("页面前判断是否返回的列表页。")]),t._v(" "),a("p",[t._v("如果是返回"),a("code",[t._v("list")]),t._v("页面，则把"),a("code",[t._v("list")]),t._v("页面路由的"),a("code",[t._v("isUseCache")]),t._v("字段设置成"),a("code",[t._v("true")]),t._v("。为什么这样设置呢？")]),t._v(" "),a("p",[t._v("因为我们对"),a("code",[t._v("list")]),t._v("组件使用的"),a("code",[t._v("keep-alive")]),t._v("进行缓存组件，其默认就是使用缓存的。")]),t._v(" "),a("p",[t._v("而我们又在"),a("code",[t._v("list")]),t._v("组件的"),a("code",[t._v("actived")]),t._v("钩子函数中进行了判断：")]),t._v(" "),a("p",[t._v("只有在"),a("code",[t._v("list")]),t._v("页面的"),a("code",[t._v("isUseCache==false")]),t._v("时才会清空原有数据并重新获取数据。")]),t._v(" "),a("p",[t._v("所以此处设置"),a("code",[t._v("isUseCache")]),t._v("为"),a("code",[t._v("true")]),t._v("，此时返会"),a("code",[t._v("list")]),t._v("页面是不会重新获取数据的，而是使用的缓存数据。")]),t._v(" "),a("p",[a("code",[t._v("detail")]),t._v("返回"),a("code",[t._v("list")]),t._v("可以缓存数据了，那么"),a("code",[t._v("search")]),t._v("前往"),a("code",[t._v("list")]),t._v("页面时怎么让"),a("code",[t._v("lis")]),t._v("t页面不使用缓存数据而是获取新数据呢？我们重新回到"),a("code",[t._v("list")]),t._v("的"),a("code",[t._v("activated")]),t._v("钩子中：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// list组价的activated钩子")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("activated")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("// isUseCache为false时才重新刷新获取数据")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("// 因为对list使用keep-alive来缓存组件，所以默认是会使用缓存数据的         ")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token operator"}},[t._v("!")]),a("span",{attrs:{class:"token keyword"}},[t._v("this")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$route"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("meta"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isUseCache"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("            \n      "),a("span",{attrs:{class:"token keyword"}},[t._v("this")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("list "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 清空原有数据")]),t._v("\n      "),a("span",{attrs:{class:"token keyword"}},[t._v("this")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("onLoad")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 这是我们获取数据的函数")]),t._v("\n      "),a("span",{attrs:{class:"token keyword"}},[t._v("this")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$route"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("meta"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isUseCache "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("false")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   \n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("我们加了一行"),a("code",[t._v("this.$route.meta.isUseCache=false")]),t._v(";也就是从"),a("code",[t._v("detail")]),t._v("返回"),a("code",[t._v("list")]),t._v("后，将"),a("code",[t._v("list")]),t._v("的"),a("code",[t._v("isUseCache")]),t._v("字段为"),a("code",[t._v("false")]),t._v("，")]),t._v(" "),a("p",[t._v("而从"),a("code",[t._v("detail")]),t._v("返回"),a("code",[t._v("list")]),t._v("前，我们设置了"),a("code",[t._v("list")]),t._v("的"),a("code",[t._v("isUseCache")]),t._v("为"),a("code",[t._v("true")]),t._v("。")]),t._v(" "),a("p",[t._v("所以，只有从"),a("code",[t._v("detail")]),t._v("返回"),a("code",[t._v("list")]),t._v("才使用缓存数据，而其他页面进入"),a("code",[t._v("list")]),t._v("是重新刷新数据的。")]),t._v(" "),a("p",[t._v("至此，一个前进刷新、后退返回的功能基本完成了")]),t._v(" "),a("h2",{attrs:{id:"场景还原实际"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#场景还原实际","aria-hidden":"true"}},[t._v("#")]),t._v(" 场景还原实际")]),t._v(" "),a("p",[t._v("比如，如果这个详情页是个订单详情，那么在订单详情页可能会有删除订单的操作。\n那么删除订单操作后会返回订单列表页，是需要列表页重新刷新的。\n那么我们需要此时在订单详情页进行是否要刷新的判断。简单改造一下详情页：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token function"}},[t._v("data")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("    \n    "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        isDel"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("false")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("// 是否进行了删除订单的操作       ")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("beforeRouteLeave")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("to"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("from")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("        \n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("to"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'List'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token comment"}},[t._v("// 根据是否删除了订单的状态，进行判断list是否需要使用缓存数据")]),t._v("\n        to"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("meta"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isUseCache "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("!")]),a("span",{attrs:{class:"token keyword"}},[t._v("this")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isDel"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                \n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("        \n    "),a("span",{attrs:{class:"token function"}},[t._v("next")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    \n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nmethods"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("        \n    "),a("span",{attrs:{class:"token function"}},[t._v("deleteOrder")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("       \n        "),a("span",{attrs:{class:"token comment"}},[t._v("// 这里是一些删除订单的操作")]),t._v("\n\n        "),a("span",{attrs:{class:"token comment"}},[t._v("// 将状态变为已删除订单")]),t._v("\n        "),a("span",{attrs:{class:"token comment"}},[t._v("// 所以beforeRouteLeave钩子中就会将list组件路由的isUseCache设置为false    ")]),t._v("\n        "),a("span",{attrs:{class:"token comment"}},[t._v("// 所以此时再返回list时，list是会重新刷新数据的 ")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("this")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isDel "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n        "),a("span",{attrs:{class:"token keyword"}},[t._v("this")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$router"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("go")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"用vuex来实现后退功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用vuex来实现后退功能","aria-hidden":"true"}},[t._v("#")]),t._v(" 用Vuex来实现后退功能")]),t._v(" "),a("p",[t._v("然后在一篇博客中看到是用Vuex来写的，所以这边也自己demo了下：")]),t._v(" "),a("p",[t._v("就是下面的代码了：")]),t._v(" "),a("p",[t._v("实现条件缓存：全局的"),a("code",[t._v("include")]),t._v("数组")]),t._v(" "),a("p",[t._v("只需要将B动态地从"),a("code",[t._v("include")]),t._v("数组中增加/删除就行了")]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("Vuex")]),t._v("中定义一个全局的缓存数组，待传给"),a("code",[t._v("include")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  namespaced"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  state"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    keepAliveComponents"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 缓存数组")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  mutations"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token function"}},[t._v("keepAlive")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" component"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token comment"}},[t._v("// 注：防止重复添加（当然也可以使用Set）")]),t._v("\n      "),a("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v("state"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("keepAliveComponents"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("includes")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("component"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" state"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("keepAliveComponents"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("push")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("component"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{attrs:{class:"token function"}},[t._v("noKeepAlive")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" component"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" index "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" state"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("keepAliveComponents"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("indexOf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("component"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      index "),a("span",{attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" state"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("keepAliveComponents"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("splice")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("在父页面中定义"),a("code",[t._v("keep-alive")]),t._v("，并传入全局的缓存数组：")]),t._v(" "),a("div",{staticClass:"language-vue extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vue"}},[a("code",[t._v("// App.vue\n\n"),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("app"),a("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{attrs:{class:"token comment"}},[t._v("\x3c!--传入include数组--\x3e")]),t._v("\n  "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("keep-alive")]),t._v(" "),a("span",{attrs:{class:"token attr-name"}},[t._v(":include")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("keepAliveComponents"),a("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("router-view")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("router-view")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("keep-alive")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\nexport default {\n  computed: {\n    ...mapState({\n      keepAliveComponents: state => state.global.keepAliveComponents\n    })\n  }\n}\n")])])]),a("p",[t._v("缓存：在路由配置页中，约定使用"),a("code",[t._v("meta")]),t._v("属性"),a("code",[t._v("keepAlive")]),t._v("，值为"),a("code",[t._v("true")]),t._v("表示组件需要缓存。")]),t._v(" "),a("p",[t._v("在全局路由钩子"),a("code",[t._v("beforeEach")]),t._v("中对该属性进行处理，这样一来，每次进入该组件，都进行缓存：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" router "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("Router")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  routes"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      path"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'/A/B'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      name"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'B'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      component"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token constant"}},[t._v("B")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      meta"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        title"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'B页面'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        keepAlive"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 这里指定B组件的缓存性")]),t._v("\n      "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nrouter"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("beforeEach")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("to"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("from")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token comment"}},[t._v("// 在路由全局钩子beforeEach中，根据keepAlive属性，统一设置页面的缓存性")]),t._v("\n  "),a("span",{attrs:{class:"token comment"}},[t._v("// 作用是每次进入该组件，就将它缓存")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("to"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("meta"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("keepAlive"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    store"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("commit")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'global/keepAlive'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" to"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("取消缓存的时机：对缓存组件使用路由的组件层钩子"),a("code",[t._v("beforeRouteLeave")]),t._v("。")]),t._v(" "),a("p",[t._v("因为B->A->B时不需要缓存B，所以可以认为：当B的下一个页面不是C时取消B的缓存，那么下次进入B组件时B就是全新的：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  name"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'B'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{attrs:{class:"token function"}},[t._v("created")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token comment"}},[t._v("// ...设置滚动条在最顶部")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{attrs:{class:"token function"}},[t._v("beforeRouteLeave")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("to"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("from")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("// 如果下一个页面不是详情页（C），则取消列表页（B）的缓存")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("to"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'C'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("this")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$store"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("commit")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'global/noKeepAlive'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("from")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token function"}},[t._v("next")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("因为B的条件缓存，是B自己的职责，所以最好把该业务逻辑写在B的内部，而不是A中，这样不至于让组件之间的跳转关系变得混乱。")]),t._v(" "),a("p",[t._v("一个需要注意的细节：因为"),a("code",[t._v("keep-alive")]),t._v("组件的"),a("code",[t._v("include")]),t._v("数组操作的对象是组件名、而不是路由名，")]),t._v(" "),a("p",[t._v("因此我们定义每一个组件时，都要显式声明"),a("code",[t._v("name")]),t._v("属性，否则缓存不起作用。而且，一个显式的"),a("code",[t._v("name")]),t._v("对"),a("code",[t._v("Vue devtools")]),t._v("有提示作用。")])])}],!1,null,null,null);e.options.__file="keep-alive.md";s.default=e.exports}}]);